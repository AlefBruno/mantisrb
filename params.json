{"name":"Mantisrb","body":"mantisrb [![Build Status](http://travis-ci.org/klauern/mantisrb.png)](http://travis-ci.org/klauern/mantisrb)\r\n========\r\n\r\n`mantisrb` is an API that works with the [Savon][1] gem to talk to a [Mantis][2]\r\nbug tracker through SOAP calls.  Mantis' SOAP interface is called [MantisConnect][3]\r\n(see [example][4] for an API view).\r\n\r\nUsage\r\n-----\r\nInstall:\r\n\r\n``` ruby\r\ngem install mantisrb\r\n```\r\n\r\nCreate a session to the Mantis server:\r\n\r\n```ruby\r\nsession = Mantis:Session.new \"http://mantisurl.com/mantis\", \"YourUsername\", \"YourPassword\"\r\n```\r\n\r\nVarious components are described below:\r\n\r\nConfig\r\n------\r\nConfiguration details about the Mantis installation can be retrieved, such\r\nas finding out the status types, access levels, and view states:\r\n\r\n```ruby\r\nsession.config.priorities # get priorities\r\nsession.config.statuses # possible issue statuses\r\nsession.config.version # Mantis version\r\nsession.config.access_levels\r\n```\r\n\r\nMore information on this can be found in {Mantis::Config}.\r\n\r\nProjects\r\n--------\r\nGet a list of projects that your user can access:\r\n\r\n```ruby\r\n    session.projects.list\r\n```\r\n\r\nCreate a project:\r\n\r\n```ruby\r\n    project_id = session.projects.create params={\r\n      name: \"project name\"  # Minimally, this is all you need\r\n    }\r\n```\r\n\r\nOr provide more details (some shown below):\r\n\r\n```ruby\r\n    project = session.projects.create {\r\n      name: \"project thing\",\r\n      status: \"development\"\r\n      enabled: true,\r\n      view_state: :public # or 'public', or session.projects.status.public,\r\n      inherit_from_global: true\r\n    }\r\n\r\n    project.name  # \"project thing\"\r\n    project.id    # 10 or whatever for referencing\r\n    project......\r\n```\r\n\r\nMore details on what is in a project can be found in {Mantis::XSD::ProjectData}.\r\n\r\nIssues\r\n------\r\nGetting issues is easy, too:\r\n\r\nby id:\r\n\r\n```ruby\r\n    session.issues.by_id 110 # if you know the id\r\n    session.issues.exists? 110 # if you don't know if it's there\r\n    session.issues.by_name \"problem name I solved\" # name of Mantis issue that\r\n    you want to search explicitly by (no wildcards or regex'ing, sorry)\r\n\r\n    session.projects.issues \"project name\" # get first 100 issues by Project Name\r\n```\r\n\r\nby ugly Mantis summary searching:\r\n\r\n```ruby\r\n    session.issues.summary_matches \"some regex\"  # Do some ssearching (mind, it\r\n    is going to be pretty slow)\r\n```\r\n\r\nby project id:\r\n\r\n```ruby\r\n    session.issues.by_project_id project_id, page_#, issues_per_page # The\r\n    fully flexible way of getting a list of issues\r\n    session.issues.by_project_id project_id # gets you an Enumerable to go\r\n    through things\r\n    session.issues.by_project_id project_id, limit # number of issues to get at\r\n    once\r\n```\r\n\r\nCreating them isn't too bad (know your options):\r\n\r\n```ruby\r\n    issue = session.issues.create {\r\n      summary: \"issue description somewhere here\",\r\n      priority: :high,\r\n      due_date: \"10/13/2011 08:45 AM\" # or other formats as DateTime will\r\n      accept\r\n    }\r\n```\r\n\r\nRequired fields for an issue:\r\n  - project (`id` or `name` of project will work)\r\n  - summary\r\n  - description\r\n  - category name (you can get this from the project)\r\n    \r\n\r\nInformation on what is in an Issue can be found in the {Mantis::XSD::IssueData}\r\nclass.\r\n\r\n### Issue Check-in\r\n\r\nIssues can be updated with comments or completion with this quick call to an\r\nissue:\r\n\r\n```ruby\r\n    session.issues.checkin(issue_id, comment, completed?) # defaults to false\r\n```\r\n\r\nThere are a number of other features that you can manipulate through the API,\r\nso check out the documentation for more.  See {Mantis::Issues} for more\r\ninformation on the other types (relationships, attachments, etc.)\r\n\r\nFilters\r\n-------\r\nFilters are Mantis' way of saving a configured search.  You likely know what\r\nthey are if you have used Mantis, so if not, please take a brief look at [this\r\nblogpost][6] to see what you can use filters for.\r\n\r\n\r\nGet a filter by `id`:\r\n\r\n```ruby\r\n    session.filters.by_project_id 110 # get all filters you can search by for the project_id\r\n```\r\n\r\nGet issues for a particular filter:\r\n\r\n```ruby\r\n    session.filters.get_issues project_id # get first 100 issues for a given\r\n    filter\r\n    session.filters.get_issues project_id, page_num, issues_per_page\r\n    # fully-formatted search\r\n```\r\n\r\nCreation/Deletion/Etc., actions on Filters are unsupported as Mantis' SOAP API\r\ndoes not support it.\r\n\r\nCategories in Projects\r\n----------------------\r\nWhen creating issues, you will need to know what category the issue belongs to, so this should be\r\nhelpful.\r\n\r\nGet all categories for a project:\r\n\r\n```ruby\r\n    session.projects.categories(project_id)\r\n```\r\n\r\nAdd a category\r\n\r\n```ruby\r\n    session.projects.add_category(45, \"Triage\")\r\n    session.projects.add_category(<project_id>, <category_name>)\r\n```\r\n\r\nDelete a category\r\n\r\n\r\n```ruby\r\n    session.projects.delete_category(<project_id>, <category_name>)\r\n```\r\n\r\nRename a category\r\n\r\n\r\n```ruby\r\n    session.projects.rename_category params={\r\n      project_id: <id>,\r\n      old_category: <category_name>,\r\n      new_category: <new_category_name>,\r\n      project_assigned_to: <id> # leaving this out will keep it in the same\r\n      project\r\n    }\r\n```\r\n\r\n\r\n\r\nCompatibility\r\n-------------\r\nYou can see which environments have been tested on [Travis CI][travis].  JRuby support \r\nis lacking, as it appears there might be an issue with [Nokogiri][nok] and \r\n[Savon][sav] gems (to be determined).  Any help in getting JRuby to work (w/\r\nJRUBY_OPTS=--1.9) would be greatly appreciated.\r\n\r\n\r\nLicense, Open-Source-ness, and other Miscellany\r\n===============================================\r\nI've licensed `mantisrb` with the [MIT License][5], which should be permissive\r\nenough for you to muck around and fiddle with.  It's open-source, so\r\ncontributions are welcomed and encouraged.\r\n\r\nFor any questions / suggestions / contributions, contact me at:\r\n\r\nEmail: klauer - at - gmail - dot - com for more information or send me a pull-request.\r\n\r\n\r\nBugs/Issues/TODO's\r\n==================\r\nThere are alot of things I don't have done in this, but you should be able to\r\nget by for the most part with:\r\n\r\n  * querying projects/issues/filters, etc\r\n  * CRUD tasks on issues/projects/filters/categories, etc.\r\n\r\n\r\nWhat isn't done:\r\n----------------\r\n\r\n  * Mocking - I have yet to get mocking to work on this project, and I could\r\n    use someone's help in getting that up.  That would make finishing the\r\n    testing SOOO much easier.\r\n  * Testing - I have a long way to go\r\n\r\n\r\nWhat can't be done:\r\n------------------\r\nUnfortunately, MantisConnect just isn't as full-featured as their web\r\napplication.  If you want feature parity with Mantis, I have yet to find an API\r\nthat will work with it, besides attempting to stub out all of the calls that\r\nare normally performed from the browser in an API, or possibly hard-wiring your\r\napplication into the Mantis Database tables.\r\n\r\nI have at a minimum, implemented every method call that MantisConnect provides.\r\nIf `mantisrb` doesn't provide something, it's probably not in their SOAP API.\r\n\r\n\r\n [1]: http://www.savonrb.com\r\n [2]: http://www.mantisbt.org\r\n [3]: http://www.futureware.biz/mantisconnect/concept.php\r\n [4]: http://www.mantisbt.org/demo/api/soap/mantisconnect.php\r\n [5]: http://www.opensource.org/licenses/mit-license.php\r\n [6]: http://www.mantisbt.org/blog/?p=6\r\n [nok]: http://nokogiri.org/Nokogiri/XML/Builder.html\r\n [sav]: http://www.savonrb.com/\r\n [travis]: http://travis-ci.org/#!/klauern/mantisrb\r\n","tagline":"MantisBT API for Ruby","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}